// Generated by view binder compiler. Do not edit!
package com.example.myapplication2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText Password;

  @NonNull
  public final EditText UserName;

  @NonNull
  public final Button btnCreateAc;

  @NonNull
  public final Button btnReturn;

  @NonNull
  public final EditText povtorPassword;

  private ActivityRegisterBinding(@NonNull LinearLayout rootView, @NonNull EditText Password,
      @NonNull EditText UserName, @NonNull Button btnCreateAc, @NonNull Button btnReturn,
      @NonNull EditText povtorPassword) {
    this.rootView = rootView;
    this.Password = Password;
    this.UserName = UserName;
    this.btnCreateAc = btnCreateAc;
    this.btnReturn = btnReturn;
    this.povtorPassword = povtorPassword;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Password;
      EditText Password = ViewBindings.findChildViewById(rootView, id);
      if (Password == null) {
        break missingId;
      }

      id = R.id.UserName;
      EditText UserName = ViewBindings.findChildViewById(rootView, id);
      if (UserName == null) {
        break missingId;
      }

      id = R.id.btnCreateAc;
      Button btnCreateAc = ViewBindings.findChildViewById(rootView, id);
      if (btnCreateAc == null) {
        break missingId;
      }

      id = R.id.btnReturn;
      Button btnReturn = ViewBindings.findChildViewById(rootView, id);
      if (btnReturn == null) {
        break missingId;
      }

      id = R.id.povtorPassword;
      EditText povtorPassword = ViewBindings.findChildViewById(rootView, id);
      if (povtorPassword == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((LinearLayout) rootView, Password, UserName, btnCreateAc,
          btnReturn, povtorPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
